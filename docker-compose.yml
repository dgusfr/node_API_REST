version: '3.8'

services:
  app:
    build: .
    container_name: node_api_rest_app
    restart: unless-stopped
    ports:
      - "${PORT}:${PORT}"
    env_file:
      - .env
    environment:
      # Sobrescreve o host do DB para usar o nome do servi√ßo da rede Docker
      - DB_HOST=db
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  db:
    image: mysql:8.0
    container_name: node_api_rest_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USER}
    ports:
      # Mapeia para uma porta diferente no host para evitar conflitos
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${DB_USER}", "-p${DB_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

volumes:
  mysql-data:

networks:
  app-network:
    driver: bridge